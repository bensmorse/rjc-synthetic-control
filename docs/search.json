[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "rjc-synthetic-control",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "RJC-Synthetic-Control-Evaluation.html",
    "href": "RJC-Synthetic-Control-Evaluation.html",
    "title": "Synthetic Control Evaluation of the RJC Pilot Project",
    "section": "",
    "text": "In 2024, Multnomah County, Oregon, launched the Reimaginging Justice in Cully (RJC) pilot project. Funded by federal Bureau of Justice Assistance, RJC sought to reduce low-level crimes and improve community safety by adopting community-driven approaches to crime reduction such as trust-building between police and residents, place-based public safety interventions, and diversion progarms for at-risk youth.\nTogether with former colleagues from Social Impact, I conducted a synthetic control analysis of the impact of RJC on the four types of low-level crime targeted by the program – assault, motor vehicle theft, larceny, and vandalism. The analysis draws entirely on publicly available census data and neighborhood-level crime data accessible through Portland’s Crime Statistics Dashboard. This document provides a summary of the evaluation as well as an applied demonstration of the synthetic control methodology."
  },
  {
    "objectID": "RJC-Synthetic-Control-Evaluation.html#background-on-rjc",
    "href": "RJC-Synthetic-Control-Evaluation.html#background-on-rjc",
    "title": "Synthetic Control Evaluation of the RJC Pilot Project",
    "section": "",
    "text": "In 2024, Multnomah County, Oregon, launched the Reimaginging Justice in Cully (RJC) pilot project. Funded by federal Bureau of Justice Assistance, RJC sought to reduce low-level crimes and improve community safety by adopting community-driven approaches to crime reduction such as trust-building between police and residents, place-based public safety interventions, and diversion progarms for at-risk youth.\nTogether with former colleagues from Social Impact, I conducted a synthetic control analysis of the impact of RJC on the four types of low-level crime targeted by the program – assault, motor vehicle theft, larceny, and vandalism. The analysis draws entirely on publicly available census data and neighborhood-level crime data accessible through Portland’s Crime Statistics Dashboard. This document provides a summary of the evaluation as well as an applied demonstration of the synthetic control methodology."
  },
  {
    "objectID": "RJC-Synthetic-Control-Evaluation.html#overview-of-the-synthetic-control-method",
    "href": "RJC-Synthetic-Control-Evaluation.html#overview-of-the-synthetic-control-method",
    "title": "Synthetic Control Evaluation of the RJC Pilot Project",
    "section": "Overview of the Synthetic Control Method",
    "text": "Overview of the Synthetic Control Method\nThe SC method is an increasing popular evaluation method that is well-suited for evaluating programs that take place at an aggregate level and affect a just small number of aggregate entities.1 The essence of the SC method is to create a “synthetic” version of the treated unit by weighting non-treated units such that the compound, synthetic control unit closely mimics the treated unit prior to the start of the intervention. Applied to the RJC evaluation, the SC method compares low-level crime rates in Cully to low-level crime rates in synthetic Cully, where synthetic Cully is constructed as a weighted combination of other Portland neighborhoods.\nIn spirit, the synthetic control method is very similar to the comparative case study method, which compares outcomes in a given intervention unit (e.g., Cully) to outcomes in units not affected by the intervention (e.g., other Portland neighborhoods). However, whereas comparative case studies often use informal justifications for the choice of comparison units, the synthetic control method uses a data-driven, algorithmic procedure to identify and weight comparison units so that the synthetic unit is as similar as possible to the intervention unit in terms of key socio-demographic predictors and pre-intervention crime rates.\nFigure 1 displays the intuition behind the method graphically. The solid line indicates the total number of low-level crimes reported in Cully for each quarter since 2015; the dashed line indicates the total number of low-level crimes in synthetic Cully. The two lines map closely to one another in both the pre and post intervention periods, suggesting the RJC pilot project did not have a significant impact on low-level crime in Cully."
  },
  {
    "objectID": "RJC-Synthetic-Control-Evaluation.html#implementation",
    "href": "RJC-Synthetic-Control-Evaluation.html#implementation",
    "title": "Synthetic Control Evaluation of the RJC Pilot Project",
    "section": "Implementation",
    "text": "Implementation\nThe data are organized by neighborhood and quarter-year, from Q1 2015 through 2025 Q2. Our outcome of interest is OffenseCount, which captures the total number of low-level offenses (assault, motor vehicle theft, larceny, and vandalism) in a given neighborhood for a given quarter-year.\n\n\n# insheet rawdata & clean\n# source(\"01_Insheet&Clean.R\")\n\n# load & view data\ndf &lt;- read_csv(\"data\\\\MultnomahAnalysisByQtr.csv\")\ndf |&gt; glimpse()\n\nRows: 3,990\nColumns: 42\n$ Neighborhood         &lt;chr&gt; \"Alameda\", \"Arbor Lodge\", \"Ardenwald\", \"Argay\", \"…\n$ quarter              &lt;chr&gt; \"2015 Q1\", \"2015 Q1\", \"2015 Q1\", \"2015 Q1\", \"2015…\n$ year                 &lt;dbl&gt; 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2…\n$ time                 &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ NeighNum             &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16…\n$ OffenseCount         &lt;dbl&gt; 0, 4, 0, 4, 1, 0, 1, 0, 1, 1, 0, 0, 0, 3, 1, 5, 0…\n$ qtr_numeric          &lt;dbl&gt; 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2…\n$ level                &lt;dbl&gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4…\n$ pop_2010             &lt;dbl&gt; 5212, 6153, 4590, 5997, 710, 2909, 5780, 5369, 33…\n$ pop_2020             &lt;dbl&gt; 5455, 6946, 4706, 6285, 813, 3108, 4692, 6080, 46…\n$ age_under18_2010     &lt;dbl&gt; 1306, 1029, 973, 1394, 155, 728, 1203, 1156, 476,…\n$ age_under18_2020     &lt;dbl&gt; 1323, 1102, 836, 1156, 169, 665, 942, 1371, 580, …\n$ age_1864_2010        &lt;dbl&gt; 3353, 4563, 3069, 3567, 443, 1899, 4030, 3667, 26…\n$ age_1864_2020        &lt;dbl&gt; 3028, 5072, 3117, 3862, 491, 1810, 2985, 3680, 37…\n$ age_over65_2010      &lt;dbl&gt; 553, 561, 548, 1036, 112, 283, 547, 546, 218, 104…\n$ age_over65_2020      &lt;dbl&gt; 1104, 772, 753, 1268, 153, 633, 765, 1030, 300, 1…\n$ median_age_2010      &lt;dbl&gt; 43.15100, 37.52636, 39.79046, 40.73328, 46.23028,…\n$ median_age_2020      &lt;dbl&gt; 45.00182, 39.35783, 41.55339, 42.86140, 44.86847,…\n$ area_sq_mile_2010    &lt;dbl&gt; 0.6136365, 0.8677970, 1.0625167, 2.0652340, 0.917…\n$ area_sq_mile_2020    &lt;dbl&gt; 0.6137378, 0.8679441, 1.0627149, 2.0655656, 0.917…\n$ pop_black_2010       &lt;dbl&gt; 174, 412, 133, 883, 16, 37, 249, 238, 880, 692, 5…\n$ pop_black_2020       &lt;dbl&gt; 159, 462, 128, 1077, 16, 56, 122, 188, 733, 759, …\n$ pop_white_2010       &lt;dbl&gt; 4894, 5194, 4277, 3736, 665, 2712, 5175, 4948, 22…\n$ pop_white_2020       &lt;dbl&gt; 5094, 5969, 4344, 4058, 735, 2854, 4231, 5623, 35…\n$ pop_hispanic_2010    &lt;dbl&gt; 174, 424, 263, 1036, 23, 82, 334, 159, 249, 1806,…\n$ pop_hispanic_2020    &lt;dbl&gt; 251, 602, 357, 899, 48, 165, 358, 330, 521, 1877,…\n$ rentburd_pct_2010    &lt;dbl&gt; 0.4768132, 0.3810594, 0.3231951, 0.5385615, 0.258…\n$ rentburd_pct_2020    &lt;dbl&gt; 0.3745387, 0.3881125, 0.5366595, 0.5306165, 0.451…\n$ home_owner_pct_2010  &lt;dbl&gt; 0.8567088, 0.7069328, 0.6301930, 0.5891163, 0.742…\n$ home_owner_pct_2020  &lt;dbl&gt; 0.8036031, 0.6629610, 0.6128259, 0.6109195, 0.823…\n$ turnout_2020         &lt;dbl&gt; 0.9702323, 0.8328200, 0.7701617, 0.6167625, 0.865…\n$ no_ged_2010          &lt;dbl&gt; 0.023355477, 0.101471663, 0.066431083, 0.11711052…\n$ no_ged_2020          &lt;dbl&gt; 0.01458674, 0.02877682, 0.05580868, 0.10434435, 0…\n$ BA_or_higher_2010    &lt;dbl&gt; 0.7075703, 0.4558446, 0.3019824, 0.3122737, 0.794…\n$ BA_or_higher_2020    &lt;dbl&gt; 0.7478001, 0.5924336, 0.4035739, 0.3561831, 0.838…\n$ tree_canopy_pct_2020 &lt;dbl&gt; 0.3063422, 0.1970050, 0.2956245, 0.1272738, 0.606…\n$ poverty_rate_2010    &lt;dbl&gt; 0.05316986, 0.18496928, 0.11307912, 0.23624906, 0…\n$ poverty_rate_2020    &lt;dbl&gt; 0.04674707, 0.08852497, 0.11865345, 0.13299799, 0…\n$ expDate              &lt;date&gt; 2024-02-09, 2024-02-09, 2024-02-09, 2024-02-09, …\n$ pct_white_2020       &lt;dbl&gt; 0.9338222, 0.8593435, 0.9230769, 0.6456643, 0.904…\n$ pct_black_2020       &lt;dbl&gt; 0.02914757, 0.06651310, 0.02719932, 0.17136038, 0…\n$ pct_hispanic_2020    &lt;dbl&gt; 0.04601283, 0.08666859, 0.07586060, 0.14303898, 0…\n\n\n\n\nWe implement the SC method via the tidysynth package; click the code-fold below for line-by-line annotation.\n\n\nCode\ndf_out &lt;- df |&gt;\n  synthetic_control(\n    outcome = OffenseCount,\n    unit = Neighborhood,\n    time = time, # quarters from Q1 2015\n    i_unit = \"Cully\",\n    i_time = 37, # quarter corresponding to 2024 Q1\n    generate_placebos = TRUE # generate placebo synthetic controls for inference\n    ) |&gt;\n  # Generate aggregate predictors used to fit the weights\n  # Vars from 2020 census\n  generate_predictor(\n    pop_2020 = pop_2020,\n    median_age_2020 = median_age_2020,\n    rentburd_pct_2020 = rentburd_pct_2020,\n    pct_white_2020 = pct_white_2020,\n    pct_hispanic_2020 = pct_hispanic_2020,\n    pct_black_2020 = pct_black_2020,\n    turnout_2020 = turnout_2020,\n    no_ged_2020 = no_ged_2020,\n    poverty_rate_2020 = poverty_rate_2020\n  ) |&gt;\n  # lagged crime rates\n  generate_predictor(\n    time_window = 1:4,\n    OffenseCount2015 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  generate_predictor(\n    time_window = 5:8,\n    OffenseCount2016 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  generate_predictor(\n    time_window = 9:12,\n    OffenseCount2017 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  generate_predictor(\n    time_window = 13:16,\n    OffenseCount2018 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  generate_predictor(\n    time_window = 17:20,\n    OffenseCount2019 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  generate_predictor(\n    time_window = 21:24,\n    OffenseCount2020 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  generate_predictor(\n    time_window = 25:28,\n    OffenseCount2021 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  generate_predictor(\n    time_window = 29:32,\n    OffenseCount2022 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  generate_predictor(\n    time_window = 33:36,\n    OffenseCount2023 = sum(OffenseCount, na.rm = TRUE)\n  ) |&gt;\n  # Generate the fitted weights for the synthetic control\n  generate_weights(optimization_window = 1:37, # time to use in the optimization task\n                   margin_ipop = .02, \n                   sigf_ipop = 7,\n                   bound_ipop = 6 # optimizer options\n  ) |&gt;\n  # Generate the synthetic control\n  generate_control()\n\n\n\nMain Results\nFigure 1 plots low-level crime rates overtime in Cully and synthetic Cully. The figure shows that crime trends in syntheic Cully closely map those of actual Cully in the pre-intervention period,2 and that this pattern continues in the post-intervention period. Indeed, the ratio of the synthetic Cully’s mean squared prediction error (MSPE) for the outcome variable between the pre vs. post intervention period is 1.05 (Table 2), contrary to what we would expect if there were significant impacts that emerged in the post-intervention period.3 Overall, the results provide little evidence to suggest the RJC program has had an impact on low-level crime.\n\n\n\nCode\ndf_out |&gt; plot_trends()\n\n\n\n\n\n\n\n\nFigure 1: Low-level Crime in Cully and Synthetic Cully, 2015 Q1-2025 Q2\n\n\n\n\n\n\n\nUnit Weights\n\nThe SC procedure uses an optimization algorithm to identify the weighted combination of neighborhoods that best resembles Cully prior to the start of the intervention in terms of its crime rates and other predictors of crime specified in the model.4 By default, the optimization algorithm minimizes synthetic Cully’s mean squared prediction error across all pre-intervention periods, though Abadie, Diamond, and Hainmueller (2015) propose a related method that uses cross-validation to minimize over-fitting.\nApplied here, the SC algorithm constructs synthetic Cully as a weighted combination of Glenfair, Overlook, Powellhurst-Gilbert, four other neighborhoods of Portland (Figure 2).\n\n\nCode\ndf_out |&gt; plot_nonzero_unit_weights()\n\n\n\n\n\n\n\n\nFigure 2: Weights Used to Construct Synthetic Cully\n\n\n\n\n\nTable 1 shows that synthetic Cully is nearly identical to Cully in terms of its population, age distribution, percentage of residents below the poverty line, percentage without a GED, electoral turnout, racial composition, and pre-intervention crime counts from 2015 to 2023.\n\n\n\nCode\ndf_out |&gt; \n  grab_balance_table() |&gt;\n  mutate(across(where(is.numeric), ~ round(., 2))) |&gt;\n  flextable()\n\n\n\n\nTable 1\n\n\n\nvariableCullysynthetic_Cullydonor_samplemedian_age_202037.9437.6640.23no_ged_20200.110.110.05pct_black_20200.140.130.07pct_hispanic_20200.230.190.10pct_white_20200.660.660.82pop_202013,339.009,678.757,840.02poverty_rate_20200.150.170.11rentburd_pct_20200.480.580.47turnout_20200.670.520.72OffenseCount2015432.00442.89293.01OffenseCount2016603.00650.19437.35OffenseCount2017755.00736.46473.02OffenseCount2018745.00761.94471.98OffenseCount2019740.00738.79469.11OffenseCount2020831.00781.89466.14OffenseCount2021856.00876.55528.76OffenseCount2022924.00889.62574.99OffenseCount2023788.00806.14517.87\nCully vs. Synthetic Cully Balance Table\n\n\n\n\n\n\n\nInference\nInference for the SC method follows the logic of permutation inference. The idea is to apply the SC method to every control unit in the sample and record the actual vs. synthetic gaps for each unit. We can then plot these gaps and visually assess whether the line associated synthetic Cully conspicuously differentiates itself from the rest, with small gaps prior to treatment and large gaps afterward.\nAs shown in Figure 3, synthetic Cully does not stand out in this regard, lending credence to the conclusion that there is no statistically significant difference between Cully and Synthetic Cully.\n\n\nCode\n# note: by default, plot_placebos prunes all placebos \n# for which synthetic unit has poor pre-intervention fit\n\ndf_out %&gt;% plot_placebos()\n\n\n\n\n\n\n\n\nFigure 3: Synthetic vs. Actual Differences for each Neighborhood in the Sample\n\n\n\n\n\nFor exact inference, Adabie et al. (2010) propose a way of constructing Fisher’s Exact p-values by dividing the post-intervention MSPE by the pre-intervention MSPE and then ranking all the cases by this ratio in descending order. A p-value is then constructed by taking the rank/total relative to the placebo pool. Intuitively, the idea is that if the synthetic control fits the observed time series well (low MSPE in the pre-period) and diverges in the post-period (high MSPE in the post-period) then there is a meaningful effect due to the intervention. Conversely, if the intervention had no effect, then the post-period and pre-period should continue to map onto one another fairly well, yielding a ratio close to 1. If the placebo units fit the data similarly, then we can’t reject the null hypothesis that there is no effect brought about by the intervention.\nAs shown in Table 2, synthetic Cully ranks 52 out of 95 units in the sample, which corresponds to a p-value of .55.\n\n\nCode\ndf_out |&gt; \n  grab_significance() |&gt;\n  rename(Neighborhood = unit_name) |&gt;\n  mutate(across(where(is.numeric), ~ round(., 2))) |&gt; # round numeric vars to 2 digits\n  knitr::kable(format = \"html\", escape = FALSE) |&gt;  # escape=FALSE allows HTML in cells\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\")) |&gt;\n  scroll_box(width = \"100%\", height = \"300px\")  # Adds scroll if needed\n\n\n\n\nTable 2: Fisher’s Exact P-Values\n\n\n\n\n\n\n\nNeighborhood\ntype\npre_mspe\npost_mspe\nmspe_ratio\nrank\nfishers_exact_pvalue\nz_score\n\n\n\n\nNorthwest\nDonor\n4291.24\n75681.79\n17.64\n1\n0.01\n3.96\n\n\nHillsdale\nDonor\n49.67\n869.94\n17.51\n2\n0.02\n3.92\n\n\nArbor Lodge\nDonor\n1740.48\n27390.32\n15.74\n3\n0.03\n3.46\n\n\nEast Columbia\nDonor\n318.56\n4671.70\n14.67\n4\n0.04\n3.17\n\n\nSouth Portland\nDonor\n788.58\n9699.80\n12.30\n5\n0.05\n2.55\n\n\nHollywood\nDonor\n154.85\n1700.81\n10.98\n6\n0.06\n2.20\n\n\nMultnomah\nDonor\n81.53\n813.32\n9.98\n7\n0.07\n1.93\n\n\nEliot\nDonor\n4380.54\n41138.65\n9.39\n8\n0.08\n1.78\n\n\nGoose Hollow\nDonor\n559.54\n4853.64\n8.67\n9\n0.09\n1.59\n\n\nSullivan's Gulch\nDonor\n202.86\n1600.04\n7.89\n10\n0.11\n1.38\n\n\nPiedmont\nDonor\n182.77\n1316.25\n7.20\n11\n0.12\n1.20\n\n\nRichmond\nDonor\n550.10\n3337.47\n6.07\n12\n0.13\n0.90\n\n\nSouthwest Hills\nDonor\n44.95\n215.52\n4.79\n13\n0.14\n0.56\n\n\nConcordia\nDonor\n328.52\n1561.84\n4.75\n14\n0.15\n0.55\n\n\nParkrose\nDonor\n984.41\n4140.62\n4.21\n15\n0.16\n0.41\n\n\nHosford-Abernethy\nDonor\n532.91\n2032.79\n3.81\n16\n0.17\n0.30\n\n\nBrooklyn\nDonor\n129.54\n454.19\n3.51\n17\n0.18\n0.22\n\n\nHayhurst\nDonor\n27.64\n93.56\n3.39\n18\n0.19\n0.19\n\n\nLents\nDonor\n553.16\n1751.85\n3.17\n19\n0.20\n0.13\n\n\nSunnyside\nDonor\n406.48\n1209.39\n2.98\n20\n0.21\n0.08\n\n\nCollins View\nDonor\n103.16\n297.58\n2.88\n21\n0.22\n0.06\n\n\nKenton\nDonor\n329.30\n927.45\n2.82\n22\n0.23\n0.04\n\n\nHomestead\nDonor\n95.71\n246.32\n2.57\n23\n0.24\n-0.02\n\n\nEastmoreland\nDonor\n43.99\n113.13\n2.57\n24\n0.25\n-0.02\n\n\nIrvington\nDonor\n175.22\n443.64\n2.53\n25\n0.26\n-0.03\n\n\nNorthwest Industrial\nDonor\n29.84\n66.42\n2.23\n26\n0.27\n-0.12\n\n\nKerns\nDonor\n1091.05\n2347.28\n2.15\n27\n0.28\n-0.13\n\n\nLinnton\nDonor\n102.71\n216.87\n2.11\n28\n0.29\n-0.15\n\n\nHumboldt\nDonor\n125.55\n255.92\n2.04\n29\n0.31\n-0.16\n\n\nPearl\nDonor\n2810.34\n5586.06\n1.99\n30\n0.32\n-0.18\n\n\nMt Tabor\nDonor\n169.01\n335.00\n1.98\n31\n0.33\n-0.18\n\n\nArlington Heights\nDonor\n251.72\n496.02\n1.97\n32\n0.34\n-0.18\n\n\nCathedral Park\nDonor\n228.75\n441.52\n1.93\n33\n0.35\n-0.19\n\n\nUniversity Park\nDonor\n574.87\n1104.43\n1.92\n34\n0.36\n-0.20\n\n\nMaplewood\nDonor\n11.08\n20.93\n1.89\n35\n0.37\n-0.20\n\n\nSunderland\nDonor\n156.79\n284.24\n1.81\n36\n0.38\n-0.22\n\n\nKing\nDonor\n152.15\n270.75\n1.78\n37\n0.39\n-0.23\n\n\nHealy Heights\nDonor\n5.30\n9.43\n1.78\n38\n0.40\n-0.23\n\n\nBeaumont-Wilshire\nDonor\n61.75\n101.31\n1.64\n39\n0.41\n-0.27\n\n\nNorth Tabor\nDonor\n190.57\n311.52\n1.63\n40\n0.42\n-0.27\n\n\nCreston-Kenilworth\nDonor\n299.13\n464.94\n1.55\n41\n0.43\n-0.29\n\n\nWoodstock\nDonor\n169.15\n258.20\n1.53\n42\n0.44\n-0.30\n\n\nHayden Island\nDonor\n994.19\n1493.17\n1.50\n43\n0.45\n-0.31\n\n\nArnold Creek\nDonor\n6.94\n9.73\n1.40\n44\n0.46\n-0.33\n\n\nForest Park\nDonor\n90.26\n122.54\n1.36\n45\n0.47\n-0.34\n\n\nSellwood-Moreland\nDonor\n441.25\n591.45\n1.34\n46\n0.48\n-0.35\n\n\nParkrose Heights\nDonor\n82.39\n105.29\n1.28\n47\n0.49\n-0.37\n\n\nBridlemile\nDonor\n23.94\n30.27\n1.26\n48\n0.51\n-0.37\n\n\nHillside\nDonor\n23.80\n29.64\n1.25\n49\n0.52\n-0.37\n\n\nCentennial\nDonor\n1293.32\n1512.33\n1.17\n50\n0.53\n-0.39\n\n\nMadison South\nDonor\n254.05\n273.74\n1.08\n51\n0.54\n-0.42\n\n\nCully\nTreated\n253.11\n266.96\n1.05\n52\n0.55\n-0.42\n\n\nPowellhurst-Gilbert\nDonor\n1256.40\n1305.99\n1.04\n53\n0.56\n-0.43\n\n\nAlameda\nDonor\n45.10\n46.71\n1.04\n54\n0.57\n-0.43\n\n\nFoster-Powell\nDonor\n149.69\n145.91\n0.97\n55\n0.58\n-0.45\n\n\nPleasant Valley\nDonor\n255.58\n245.27\n0.96\n56\n0.59\n-0.45\n\n\nOverlook\nDonor\n404.06\n386.52\n0.96\n57\n0.60\n-0.45\n\n\nBuckman West\nDonor\n1499.11\n1393.89\n0.93\n58\n0.61\n-0.46\n\n\nLaurelhurst\nDonor\n41.10\n37.71\n0.92\n59\n0.62\n-0.46\n\n\nLloyd\nDonor\n1471.89\n1342.24\n0.91\n60\n0.63\n-0.46\n\n\nMill Park\nDonor\n167.44\n151.77\n0.91\n61\n0.64\n-0.46\n\n\nSt Johns\nDonor\n708.26\n634.25\n0.90\n62\n0.65\n-0.47\n\n\nSumner\nDonor\n83.73\n73.75\n0.88\n63\n0.66\n-0.47\n\n\nDowntown\nDonor\n71427.81\n62401.80\n0.87\n64\n0.67\n-0.47\n\n\nWoodlawn\nDonor\n89.46\n72.77\n0.81\n65\n0.68\n-0.49\n\n\nRussell\nDonor\n93.16\n75.27\n0.81\n66\n0.69\n-0.49\n\n\nSabin\nDonor\n41.69\n33.55\n0.80\n67\n0.71\n-0.49\n\n\nAshcreek\nDonor\n27.33\n21.51\n0.79\n68\n0.72\n-0.50\n\n\nFar Southwest\nDonor\n18.02\n14.15\n0.78\n69\n0.73\n-0.50\n\n\nNorthwest Heights\nDonor\n12.46\n9.56\n0.77\n70\n0.74\n-0.50\n\n\nVernon\nDonor\n58.67\n43.74\n0.75\n71\n0.75\n-0.51\n\n\nMontavilla\nDonor\n541.43\n346.68\n0.64\n72\n0.76\n-0.53\n\n\nBoise\nDonor\n248.29\n156.03\n0.63\n73\n0.77\n-0.54\n\n\nGrant Park\nDonor\n73.15\n42.50\n0.58\n74\n0.78\n-0.55\n\n\nCrestwood\nDonor\n13.44\n7.58\n0.56\n75\n0.79\n-0.55\n\n\nMarkham\nDonor\n19.86\n10.80\n0.54\n76\n0.80\n-0.56\n\n\nArdenwald\nDonor\n21.73\n10.76\n0.50\n77\n0.81\n-0.57\n\n\nWoodland Park\nDonor\n45.39\n22.39\n0.49\n78\n0.82\n-0.57\n\n\nSouth Tabor\nDonor\n207.70\n100.23\n0.48\n79\n0.83\n-0.58\n\n\nWest Portland Park\nDonor\n52.60\n24.78\n0.47\n80\n0.84\n-0.58\n\n\nBridgeton\nDonor\n67.50\n31.79\n0.47\n81\n0.85\n-0.58\n\n\nRose City Park\nDonor\n187.52\n83.42\n0.44\n82\n0.86\n-0.59\n\n\nReed\nDonor\n71.27\n29.52\n0.41\n83\n0.87\n-0.59\n\n\nGlenfair\nDonor\n373.54\n154.64\n0.41\n84\n0.88\n-0.59\n\n\nMt Scott-Arleta\nDonor\n223.03\n90.46\n0.41\n85\n0.89\n-0.60\n\n\nMarshall Park\nDonor\n6.72\n2.47\n0.37\n86\n0.91\n-0.61\n\n\nSouth Burlingame\nDonor\n17.78\n5.94\n0.33\n87\n0.92\n-0.61\n\n\nPortsmouth\nDonor\n525.23\n166.78\n0.32\n88\n0.93\n-0.62\n\n\nRoseway\nDonor\n123.63\n37.99\n0.31\n89\n0.94\n-0.62\n\n\nHazelwood\nDonor\n14272.79\n3106.94\n0.22\n90\n0.95\n-0.65\n\n\nOld Town/Chinatown\nDonor\n2218.84\n470.95\n0.21\n91\n0.96\n-0.65\n\n\nWilkes\nDonor\n389.88\n69.79\n0.18\n92\n0.97\n-0.66\n\n\nSylvan-Highlands\nDonor\n57.46\n9.70\n0.17\n93\n0.98\n-0.66\n\n\nBrentwood-Darlington\nDonor\n242.19\n36.18\n0.15\n94\n0.99\n-0.66\n\n\nArgay\nDonor\n380.89\n23.22\n0.06\n95\n1.00\n-0.69"
  },
  {
    "objectID": "RJC-Synthetic-Control-Evaluation.html#footnotes",
    "href": "RJC-Synthetic-Control-Evaluation.html#footnotes",
    "title": "Synthetic Control Evaluation of the RJC Pilot Project",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFor background on the synthetic control method, see: Abadie, Alberto. “Using synthetic controls: Feasibility, Data Requirements, and Methodological Aspects.” Journal of Economic Literature 59.2 (2021): 391-425.↩︎\nAlthough pre-intevention trends between Cully and synthetic Cully map closely onto one another, the fit is not perfect. In a more extended implementation, we might consider using the Augmented Syntheticl Control method to further minimize pre-intervention imbalance between synthetic Cully and Cully. Analogous to bias correction for inexact matching, the Augmented SC method uses an outcome model to estimate bias due to imperfect pretreatment fit and then de-biases the original SCM estimate. For background on the augmented synthetic control method, see: Ben-Michael, Eli, Avi Feller, and Jesse Rothstein. “The augmented synthetic control method.” Journal of the American Statistical Association 116.536 (2021): 1789-1803.↩︎\nInference for the SC method is akin to a permutation test in which the effect estimate for the treated unit is compared to the distribution of effects for control units. As seen in Table 2, Synthetic Cully MSPE ratio ranks 52 out of the 95 units in the sample, corresponding to a Fisher’s exact p-value of .55. For full details, see the Inference section below.↩︎\nIn addition to pre-intervention crime counts for each quarter from 2015 to 2023, I include population, percentage of residents below the poverty line, percentage without a GED, electoral turnout, and racial composition measures in the model.↩︎"
  }
]